[uwsgi]
#使用HTTP访问的端口号, 使用这个端口号是直接访问了uWSGI, 绕过了Nginx
http = :8010
#与外界连接的端口号, Nginx通过这个端口转发给uWSGI
socket = 127.0.0.1:8001

#是否使用主线程
master = true
# 项目在服务器中的目录(绝对路径)
chdir = /home/gitpackage/MxOnline
# Django's wsgi 文件目录
wsgi-file = MxShop/wsgi.py
# 指定静态文件
static-map = /static=/home/gitpackage/MxOnline/static
# 最大进程数
processes = 10
#每个进程的线程数
threads = 2
#状态监听端口
stats = 127.0.0.1:9191
# 退出时自动清理环境配置
vacuum = true
#目录下文件改动时自动重启
touch-reload = /home/gitpackage/MxOnline
#Python文件改动时自动重启
#py-auto-reload = 1
#后台运行并把日志存到.log文件
daemonize = /root/projects/Mxshop/MxShop/uWSGI.log
;
;; uwsgi --http :80 --chdir /root/projects/Mxshop --wsgi signup.wsgi


;[uwsgi]
;#使用HTTP访问的端口号, 使用这个端口号是直接访问了uWSGI, 绕过了Nginx
;http = :8011
;#与外界连接的端口号, Nginx通过这个端口转发给uWSGI
;socket = 127.0.0.1:8002
;
;#是否使用主线程
;master = true
;# 项目在服务器中的目录(绝对路径)
;chdir = /home/gitpackage/MxOnline2
;# Django's wsgi 文件目录
;wsgi-file = signup/wsgi.py
;# 指定静态文件
;static-map = /static=/home/gitpackage/MxOnline2/static
;# 最大进程数
;processes = 10
;#每个进程的线程数
;threads = 2
;#状态监听端口
;stats = 127.0.0.1:9292
;# 退出时自动清理环境配置
;vacuum = true
;#目录下文件改动时自动重启
;touch-reload = /home/gitpackage/MxOnline2
;#Python文件改动时自动重启
;#py-auto-reload = 1
;#后台运行并把日志存到.log文件
;daemonize = /root/projects/Mxshop/signup/uWSGI.log
;
;
;[uwsgi]
;#使用HTTP访问的端口号, 使用这个端口号是直接访问了uWSGI, 绕过了Nginx
;http = :8012
;#与外界连接的端口号, Nginx通过这个端口转发给uWSGI
;socket = 127.0.0.1:8003
;
;#是否使用主线程
;master = true
;# 项目在服务器中的目录(绝对路径)
;chdir = /home/gitpackage/MxOnline3
;# Django's wsgi 文件目录
;wsgi-file = signup/wsgi.py
;# 指定静态文件
;static-map = /static=/home/gitpackage/MxOnline3/static
;# 最大进程数
;processes = 10
;#每个进程的线程数
;threads = 2
;#状态监听端口
;;stats = 127.0.0.1:9292
;# 退出时自动清理环境配置
;vacuum = true
;#目录下文件改动时自动重启
;touch-reload = /home/gitpackage/MxOnline3
;#Python文件改动时自动重启
;#py-auto-reload = 1
;#后台运行并把日志存到.log文件
;daemonize = /root/projects/Mxshop/signup/uWSGI.log
;
;[uwsgi]
;#使用HTTP访问的端口号, 使用这个端口号是直接访问了uWSGI, 绕过了Nginx
;http = :8013
;#与外界连接的端口号, Nginx通过这个端口转发给uWSGI
;socket = 127.0.0.1:8004
;
;#是否使用主线程
;master = true
;# 项目在服务器中的目录(绝对路径)
;chdir = /home/gitpackage/MxOnline4
;# Django's wsgi 文件目录
;wsgi-file = signup/wsgi.py
;# 指定静态文件
;static-map = /static=/home/gitpackage/MxOnline4/static
;# 最大进程数
;processes = 10
;#每个进程的线程数
;threads = 2
;#状态监听端口
;;stats = 127.0.0.1:9292
;# 退出时自动清理环境配置
;vacuum = true
;#目录下文件改动时自动重启
;touch-reload = /home/gitpackage/MxOnline4
;#Python文件改动时自动重启
;#py-auto-reload = 1
;#后台运行并把日志存到.log文件
;daemonize = /root/projects/Mxshop/signup/uWSGI.log
;
;
;[uwsgi]
;#使用HTTP访问的端口号, 使用这个端口号是直接访问了uWSGI, 绕过了Nginx
;http = :8014
;#与外界连接的端口号, Nginx通过这个端口转发给uWSGI
;socket = 127.0.0.1:8005
;
;#是否使用主线程
;master = true
;# 项目在服务器中的目录(绝对路径)
;chdir = /home/gitpackage/MxOnline5
;# Django's wsgi 文件目录
;wsgi-file = signup/wsgi.py
;# 指定静态文件
;static-map = /static=/home/gitpackage/MxOnline5/static
;# 最大进程数
;processes = 10
;#每个进程的线程数
;threads = 2
;#状态监听端口
;;stats = 127.0.0.1:9292
;# 退出时自动清理环境配置
;vacuum = true
;#目录下文件改动时自动重启
;touch-reload = /home/gitpackage/MxOnline5
;#Python文件改动时自动重启
;#py-auto-reload = 1
;#后台运行并把日志存到.log文件
;daemonize = /root/projects/Mxshop/signup/uWSGI.log